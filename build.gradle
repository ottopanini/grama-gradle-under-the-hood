logger.info ">>> build.gradle --> This is executed during configuration phase - timestamp @ ${project.gradle.timestamp()}"

logger.info ">>> build.gradle: $project.gradle.gradleVersion"
logger.info ">>> build.gradle: $project.gradle.gradleHomeDir"
logger.info ">>> build.gradle: $project.gradle.gradleUserHomeDir"

logger.info ">>> build.gradle: $project.buildFile"
logger.info ">>> build.gradle: ${project.relativePath(project.buildFile)}"


logger.info """
******************************************************************************
Welcome to Gradle $gradle.gradleVersion - http://www.gradle.org
Gradle home is set to: $gradle.gradleHomeDir
Gradle user directory is set to: $gradle.gradleUserHomeDir

Base directory: $projectDir
Running script  ${relativePath(buildFile)}
******************************************************************************
"""

logger.info "has property: ${project.gradle.hasProperty('gradleVersion')}"
logger.info "has property: ${hasProperty('projectDir')}"

if (project.hasProperty('gradlePropertiesProp')) {
    logger.info "The property file value is $gradlePropertiesProp"
} else {
    logger.info "Ooops! gradlePropertiesProp can't be found"
}

if (project.hasProperty('commandLineProjectProp')) {
    logger.info "The commandLine property value is $commandLineProjectProp"
} else {
    logger.info "Ooops! commandLineProjectProp can't be found"
}

// add custom properties
project.ext.sayHello = "Hello!!"
if (project.hasProperty('sayHello')) {
    logger.info sayHello
} else {
    logger.info "Unable to say Hello!"
}

//testing availability of closures
if (project.gradle.hasProperty('timestamp')) {
    logger.info project.gradle.timestamp()
} else {
    logger.info "Ooops! timestamp() can't be found"
}

